// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class RealisePOL extends ethereum.Event {
  get params(): RealisePOL__Params {
    return new RealisePOL__Params(this);
  }
}

export class RealisePOL__Params {
  _event: RealisePOL;

  constructor(event: RealisePOL) {
    this._event = event;
  }

  get pool(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class Reserve extends ethereum.SmartContract {
  static bind(address: Address): Reserve {
    return new Reserve("Reserve", address);
  }

  BASE(): Address {
    let result = super.call("BASE", "BASE():(address)", []);

    return result[0].toAddress();
  }

  try_BASE(): ethereum.CallResult<Address> {
    let result = super.tryCall("BASE", "BASE():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  DEPLOYER(): Address {
    let result = super.call("DEPLOYER", "DEPLOYER():(address)", []);

    return result[0].toAddress();
  }

  try_DEPLOYER(): ethereum.CallResult<Address> {
    let result = super.tryCall("DEPLOYER", "DEPLOYER():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  emissions(): boolean {
    let result = super.call("emissions", "emissions():(bool)", []);

    return result[0].toBoolean();
  }

  try_emissions(): ethereum.CallResult<boolean> {
    let result = super.tryCall("emissions", "emissions():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  freezeTime(): BigInt {
    let result = super.call("freezeTime", "freezeTime():(uint256)", []);

    return result[0].toBigInt();
  }

  try_freezeTime(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("freezeTime", "freezeTime():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  globalFreeze(): boolean {
    let result = super.call("globalFreeze", "globalFreeze():(bool)", []);

    return result[0].toBoolean();
  }

  try_globalFreeze(): ethereum.CallResult<boolean> {
    let result = super.tryCall("globalFreeze", "globalFreeze():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  polClaim(): BigInt {
    let result = super.call("polClaim", "polClaim():(uint256)", []);

    return result[0].toBigInt();
  }

  try_polClaim(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("polClaim", "polClaim():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  polEmission(): BigInt {
    let result = super.call("polEmission", "polEmission():(uint256)", []);

    return result[0].toBigInt();
  }

  try_polEmission(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("polEmission", "polEmission():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  polPoolAddress(): Address {
    let result = super.call("polPoolAddress", "polPoolAddress():(address)", []);

    return result[0].toAddress();
  }

  try_polPoolAddress(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "polPoolAddress",
      "polPoolAddress():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  polStatus(): boolean {
    let result = super.call("polStatus", "polStatus():(bool)", []);

    return result[0].toBoolean();
  }

  try_polStatus(): ethereum.CallResult<boolean> {
    let result = super.tryCall("polStatus", "polStatus():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  polTime(): BigInt {
    let result = super.call("polTime", "polTime():(uint256)", []);

    return result[0].toBigInt();
  }

  try_polTime(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("polTime", "polTime():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  polTokenAddress(): Address {
    let result = super.call(
      "polTokenAddress",
      "polTokenAddress():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_polTokenAddress(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "polTokenAddress",
      "polTokenAddress():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  realiseClaim(): BigInt {
    let result = super.call("realiseClaim", "realiseClaim():(uint256)", []);

    return result[0].toBigInt();
  }

  try_realiseClaim(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("realiseClaim", "realiseClaim():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _base(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _wbnb(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class FlipEmissionsCall extends ethereum.Call {
  get inputs(): FlipEmissionsCall__Inputs {
    return new FlipEmissionsCall__Inputs(this);
  }

  get outputs(): FlipEmissionsCall__Outputs {
    return new FlipEmissionsCall__Outputs(this);
  }
}

export class FlipEmissionsCall__Inputs {
  _call: FlipEmissionsCall;

  constructor(call: FlipEmissionsCall) {
    this._call = call;
  }
}

export class FlipEmissionsCall__Outputs {
  _call: FlipEmissionsCall;

  constructor(call: FlipEmissionsCall) {
    this._call = call;
  }
}

export class FlipPolCall extends ethereum.Call {
  get inputs(): FlipPolCall__Inputs {
    return new FlipPolCall__Inputs(this);
  }

  get outputs(): FlipPolCall__Outputs {
    return new FlipPolCall__Outputs(this);
  }
}

export class FlipPolCall__Inputs {
  _call: FlipPolCall;

  constructor(call: FlipPolCall) {
    this._call = call;
  }
}

export class FlipPolCall__Outputs {
  _call: FlipPolCall;

  constructor(call: FlipPolCall) {
    this._call = call;
  }
}

export class GrantFundsCall extends ethereum.Call {
  get inputs(): GrantFundsCall__Inputs {
    return new GrantFundsCall__Inputs(this);
  }

  get outputs(): GrantFundsCall__Outputs {
    return new GrantFundsCall__Outputs(this);
  }
}

export class GrantFundsCall__Inputs {
  _call: GrantFundsCall;

  constructor(call: GrantFundsCall) {
    this._call = call;
  }

  get amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get to(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class GrantFundsCall__Outputs {
  _call: GrantFundsCall;

  constructor(call: GrantFundsCall) {
    this._call = call;
  }
}

export class GrantPOLFundsCall extends ethereum.Call {
  get inputs(): GrantPOLFundsCall__Inputs {
    return new GrantPOLFundsCall__Inputs(this);
  }

  get outputs(): GrantPOLFundsCall__Outputs {
    return new GrantPOLFundsCall__Outputs(this);
  }
}

export class GrantPOLFundsCall__Inputs {
  _call: GrantPOLFundsCall;

  constructor(call: GrantPOLFundsCall) {
    this._call = call;
  }

  get amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get to(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class GrantPOLFundsCall__Outputs {
  _call: GrantPOLFundsCall;

  constructor(call: GrantPOLFundsCall) {
    this._call = call;
  }
}

export class PerformApprovalsCall extends ethereum.Call {
  get inputs(): PerformApprovalsCall__Inputs {
    return new PerformApprovalsCall__Inputs(this);
  }

  get outputs(): PerformApprovalsCall__Outputs {
    return new PerformApprovalsCall__Outputs(this);
  }
}

export class PerformApprovalsCall__Inputs {
  _call: PerformApprovalsCall;

  constructor(call: PerformApprovalsCall) {
    this._call = call;
  }
}

export class PerformApprovalsCall__Outputs {
  _call: PerformApprovalsCall;

  constructor(call: PerformApprovalsCall) {
    this._call = call;
  }
}

export class PurgeDeployerCall extends ethereum.Call {
  get inputs(): PurgeDeployerCall__Inputs {
    return new PurgeDeployerCall__Inputs(this);
  }

  get outputs(): PurgeDeployerCall__Outputs {
    return new PurgeDeployerCall__Outputs(this);
  }
}

export class PurgeDeployerCall__Inputs {
  _call: PurgeDeployerCall;

  constructor(call: PurgeDeployerCall) {
    this._call = call;
  }
}

export class PurgeDeployerCall__Outputs {
  _call: PurgeDeployerCall;

  constructor(call: PurgeDeployerCall) {
    this._call = call;
  }
}

export class RealisePOLCall extends ethereum.Call {
  get inputs(): RealisePOLCall__Inputs {
    return new RealisePOLCall__Inputs(this);
  }

  get outputs(): RealisePOLCall__Outputs {
    return new RealisePOLCall__Outputs(this);
  }
}

export class RealisePOLCall__Inputs {
  _call: RealisePOLCall;

  constructor(call: RealisePOLCall) {
    this._call = call;
  }

  get token(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class RealisePOLCall__Outputs {
  _call: RealisePOLCall;

  constructor(call: RealisePOLCall) {
    this._call = call;
  }
}

export class SetGlobalFreezeCall extends ethereum.Call {
  get inputs(): SetGlobalFreezeCall__Inputs {
    return new SetGlobalFreezeCall__Inputs(this);
  }

  get outputs(): SetGlobalFreezeCall__Outputs {
    return new SetGlobalFreezeCall__Outputs(this);
  }
}

export class SetGlobalFreezeCall__Inputs {
  _call: SetGlobalFreezeCall;

  constructor(call: SetGlobalFreezeCall) {
    this._call = call;
  }

  get freeze(): boolean {
    return this._call.inputValues[0].value.toBoolean();
  }
}

export class SetGlobalFreezeCall__Outputs {
  _call: SetGlobalFreezeCall;

  constructor(call: SetGlobalFreezeCall) {
    this._call = call;
  }
}

export class SetPOLParamsCall extends ethereum.Call {
  get inputs(): SetPOLParamsCall__Inputs {
    return new SetPOLParamsCall__Inputs(this);
  }

  get outputs(): SetPOLParamsCall__Outputs {
    return new SetPOLParamsCall__Outputs(this);
  }
}

export class SetPOLParamsCall__Inputs {
  _call: SetPOLParamsCall;

  constructor(call: SetPOLParamsCall) {
    this._call = call;
  }

  get newPolEmission(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get newPolClaim(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get newRealiseClaim(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class SetPOLParamsCall__Outputs {
  _call: SetPOLParamsCall;

  constructor(call: SetPOLParamsCall) {
    this._call = call;
  }
}

export class SetParamsCall extends ethereum.Call {
  get inputs(): SetParamsCall__Inputs {
    return new SetParamsCall__Inputs(this);
  }

  get outputs(): SetParamsCall__Outputs {
    return new SetParamsCall__Outputs(this);
  }
}

export class SetParamsCall__Inputs {
  _call: SetParamsCall;

  constructor(call: SetParamsCall) {
    this._call = call;
  }

  get token(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetParamsCall__Outputs {
  _call: SetParamsCall;

  constructor(call: SetParamsCall) {
    this._call = call;
  }
}
